{"version":3,"file":"client.modern.js","sources":["../src/client.ts"],"sourcesContent":["class Client<T> {\n  private eventSource: EventSource | null;\n  private _callbacks: Record<string, any>;\n\n  private onOpenBound: (event: MessageEvent) => void;\n  private onErrorBound: (event: MessageEvent) => void;\n  private closeBound: (event: MessageEvent) => void;\n\n  constructor(path: string) {\n    this.eventSource = new EventSource(path);\n\n    this.onOpenBound = this.onOpen.bind(this);\n    this.onErrorBound = this.onError.bind(this);\n    this.closeBound = this.close.bind(this);\n\n    // open and error are reserved\n    this.eventSource.addEventListener(\"open\", this.onOpenBound);\n    this.eventSource.addEventListener(\"error\", this.onErrorBound);\n\n    // close is a standard message, hijacked for our purposes\n    this.eventSource.addEventListener(\n      \"close\",\n      this.closeBound,\n    );\n\n    // keep record of our callback functions to make them available to removeEventListener\n    this._callbacks = {};\n  }\n\n  onOpen(event: MessageEvent) {\n    // console.log(\"onOpen\");\n  }\n  onError(event: MessageEvent) {\n    // console.log(\"onError\");\n  }\n\n  close() {\n    // close and cleanup\n    if (this.eventSource) {\n      this.eventSource.removeEventListener(\"open\", this.onOpenBound);\n      this.eventSource.removeEventListener(\"error\", this.onErrorBound);\n      this.eventSource.removeEventListener(\"close\", this.closeBound);\n      this.removeAllEventListener();\n      this.eventSource?.close();\n      this.eventSource = null;\n      this._callbacks = {};\n      this.eventSource = null;\n    }\n  }\n\n  addEventListener<T>(\n    eventName: string,\n    _callback: ({ type, data }: { type: string; data: T }) => void,\n  ) {\n    const callback = (event: MessageEvent) => {\n      const type: string = event.type;\n      const data: T = JSON.parse(event.data);\n\n      _callback({\n        type,\n        data,\n      });\n    };\n\n    // Only one listenter at a time per event.  If a second is needed, then change the code and document why.\n    this.removeEventListener(eventName);\n\n    this._callbacks[eventName] = callback;\n\n    this.eventSource?.addEventListener(eventName, callback);\n  }\n\n  removeEventListener(eventName: string) {\n    const callback = this._callbacks[eventName];\n\n    if (callback) {\n      this.eventSource?.removeEventListener(eventName, callback);\n      delete this._callbacks[eventName];\n    }\n  }\n\n  removeAllEventListener() {\n    Object.keys(this._callbacks).forEach((callbackName) =>\n      this.removeEventListener(callbackName)\n    );\n  }\n}\n\nexport { Client };\n"],"names":["Client","constructor","path","eventSource","_callbacks","this","onOpenBound","onErrorBound","closeBound","EventSource","onOpen","bind","onError","close","addEventListener","event","_this$eventSource","removeEventListener","removeAllEventListener","eventName","_callback","_this$eventSource2","callback","type","data","JSON","parse","_this$eventSource3","Object","keys","forEach","callbackName"],"mappings":"AAAA,MAAMA,EAQJC,WAAAA,CAAYC,GAPJC,KAAAA,wBACAC,gBAAU,EAAAC,KAEVC,iBACAC,EAAAA,KAAAA,yBACAC,gBAAU,EAGhBH,KAAKF,YAAc,IAAIM,YAAYP,GAEnCG,KAAKC,YAAcD,KAAKK,OAAOC,KAAKN,MACpCA,KAAKE,aAAeF,KAAKO,QAAQD,KAAKN,MACtCA,KAAKG,WAAaH,KAAKQ,MAAMF,KAAKN,MAGlCA,KAAKF,YAAYW,iBAAiB,OAAQT,KAAKC,aAC/CD,KAAKF,YAAYW,iBAAiB,QAAST,KAAKE,cAGhDF,KAAKF,YAAYW,iBACf,QACAT,KAAKG,YAIPH,KAAKD,WAAa,EACpB,CAEAM,MAAAA,CAAOK,GAGPH,CAAAA,OAAAA,CAAQG,GAIRF,CAAAA,KAAAA,GAEwB,IAAAG,EAAlBX,KAAKF,cACPE,KAAKF,YAAYc,oBAAoB,OAAQZ,KAAKC,aAClDD,KAAKF,YAAYc,oBAAoB,QAASZ,KAAKE,cACnDF,KAAKF,YAAYc,oBAAoB,QAASZ,KAAKG,YACnDH,KAAKa,gCACLF,OAAKb,cAALa,EAAkBH,QAClBR,KAAKF,YAAc,KACnBE,KAAKD,WAAa,GAClBC,KAAKF,YAAc,KAEvB,CAEAW,gBAAAA,CACEK,EACAC,GAA8DC,IAAAA,EAE9D,MAAMC,EAAYP,IAChB,MAAMQ,EAAeR,EAAMQ,KACrBC,EAAUC,KAAKC,MAAMX,EAAMS,MAEjCJ,EAAU,CACRG,OACAC,UAKJnB,KAAKY,oBAAoBE,GAEzBd,KAAKD,WAAWe,GAAaG,SAE7BD,OAAKlB,cAALkB,EAAkBP,iBAAiBK,EAAWG,EAChD,CAEAL,mBAAAA,CAAoBE,GAClB,MAAMG,EAAWjB,KAAKD,WAAWe,OAEnBQ,EAAVL,IACc,OAAhBK,EAAAtB,KAAKF,cAALwB,EAAkBV,oBAAoBE,EAAWG,UAC1CjB,KAAKD,WAAWe,GAE3B,CAEAD,sBAAAA,GACEU,OAAOC,KAAKxB,KAAKD,YAAY0B,QAASC,GACpC1B,KAAKY,oBAAoBc,GAE7B"}