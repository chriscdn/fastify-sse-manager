{"version":3,"file":"server.cjs","sources":["../src/server.ts"],"sourcesContent":["import { EventEmitter, on } from \"events\";\n\nimport type {\n  FastifyBaseLogger,\n  FastifyPluginCallback,\n  FastifyPluginOptions,\n  FastifyTypeProvider,\n  RawServerDefault,\n} from \"fastify\";\nimport { type JsonSchemaToTsProvider } from \"@fastify/type-provider-json-schema-to-ts\";\nimport FastifySSEPlugin from \"fastify-sse-v2\";\n\nconst eventEmitter: EventEmitter = new EventEmitter();\n\ntype TOptions = FastifyPluginOptions & {\n  schema?: Record<string, any>;\n  preHandler?: any;\n  didRegisterToChannel?: (channel: string) => void;\n};\n\n// https://seg.phault.net/blog/2018/03/async-iterators-cancellation/\nconst fastifyPlugin: FastifyPluginCallback<\n  TOptions,\n  RawServerDefault,\n  FastifyTypeProvider,\n  FastifyBaseLogger\n> = (fastifyInstance, opts, done) => {\n  const server = fastifyInstance.withTypeProvider<JsonSchemaToTsProvider>();\n\n  // This might be a problem if imported multiple times?\n\n  // @ts-ignore\n  server.register(FastifySSEPlugin);\n\n  server.get(\"/:channel\", {\n    schema: {\n      ...(opts.schema ?? {}),\n      params: {\n        type: \"object\",\n        properties: {\n          channel: {\n            type: \"string\",\n          },\n        },\n        required: [\"channel\"],\n      },\n      headers: {\n        type: \"object\",\n        properties: {\n          \"last-event-id\": {\n            type: \"integer\",\n          },\n        },\n      },\n      // response: {\n      //   200: {},\n      // },\n    } as const,\n\n    preHandler: opts.preHandler ?? [],\n\n    handler(request, reply) {\n      const channel: string = request.params.channel;\n      const lastEventId: number | undefined = request.headers[\"last-event-id\"];\n\n      const missedMessages = messageHistory.messageHistoryForChannel(\n        channel,\n        lastEventId,\n      );\n\n      const abortController = new AbortController();\n\n      // https://github.com/NodeFactoryIo/fastify-sse-v2\n      //\n      // This doesn't get called when running Vue in dev mode.  Production is\n      // fine.\n      request.socket.on(\"close\", () => {\n        console.log(\"*************\");\n        console.log(\"SSE Request Closed\");\n        console.log(\"*************\");\n\n        abortController.abort();\n      });\n\n      /**\n       * This needs to be called after the response is made.  Placing it after\n       * reply.sse(), however, makes it inaccessible.\n       *\n       * We use a `setTimeout` to get around that.\n       */\n      if (opts?.didRegisterToChannel) {\n        setTimeout(() => {\n          opts.didRegisterToChannel!(channel);\n        });\n      }\n\n      reply.sse(\n        (async function* () {\n          // yield all missed messages based on lastEventId\n          for (const missedMessage of missedMessages) {\n            yield missedMessage;\n          }\n\n          // nodejs.org/api/events.html#eventsonemitter-eventname-options\n\n          try {\n            for await (const events of on(eventEmitter, channel, {\n              signal: abortController.signal,\n            })) {\n              for (let event of events) {\n                yield event;\n              }\n            }\n          } catch {\n            // console.log(\"boooooo\");\n          }\n        })(),\n      );\n\n      // here we want to somehow broadcast or notify that a connection was made\n    },\n  });\n\n  done();\n};\n\ntype TMessage = {\n  event: string;\n  data: string;\n  id: number;\n};\n\ntype TMessageHistoryItem = {\n  channelName: string;\n  id: number;\n  message: TMessage;\n};\n\nclass MessageHistory {\n  constructor(\n    private messageHistory: Array<TMessageHistoryItem> = [],\n    private lastId: number = 0,\n  ) {}\n\n  messageHistoryForChannel(\n    channelName: string,\n    lastEventId: number | undefined,\n  ) {\n    return lastEventId !== undefined\n      ? this.messageHistory\n          .filter((item) => item.channelName === channelName)\n          .filter((item) => item.id > lastEventId)\n          .map((item) => item.message)\n      : [];\n  }\n\n  push(channelName: string, message: TMessage) {\n    this.messageHistory.push({ channelName, id: message.id, message });\n\n    // keep last 1000 messages.. make configurable\n    this.messageHistory = this.messageHistory.slice(-1000);\n  }\n\n  nextId() {\n    this.lastId += 1;\n    return this.lastId;\n  }\n}\n\nconst messageHistory = new MessageHistory();\n\n// order matters here\nconst sendSSEMessage = <T = unknown>(\n  channelName: string,\n  eventName: string,\n  data: T = null as T,\n) => {\n  // create a message\n  const message: TMessage = {\n    event: eventName,\n    data: JSON.stringify(data),\n    id: messageHistory.nextId(),\n  };\n\n  // push it onto the history stack\n  messageHistory.push(channelName, message);\n\n  // fire it off\n  eventEmitter.emit(channelName, message);\n  return message;\n};\n\n// console.log(\"HELLO WoRLD\");\n// export default fastifyPlugin;\nexport { fastifyPlugin, sendSSEMessage };\n"],"names":["eventEmitter","EventEmitter","fastifyPlugin","fastifyInstance","opts","done","_opts$schema","_opts$preHandler","server","withTypeProvider","register","FastifySSEPlugin","get","schema","params","type","properties","channel","required","headers","preHandler","handler","request","reply","lastEventId","missedMessages","messageHistory","messageHistoryForChannel","abortController","AbortController","socket","on","console","log","abort","didRegisterToChannel","setTimeout","sse","missedMessage","events","signal","event","MessageHistory","constructor","lastId","channelName","undefined","filter","item","id","map","message","push","slice","nextId","sendSSEMessage","eventName","data","JSON","stringify","emit"],"mappings":"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"}