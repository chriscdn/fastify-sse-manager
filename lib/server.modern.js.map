{"version":3,"file":"server.modern.js","sources":["../src/server.ts"],"sourcesContent":["import { EventEmitter, on } from \"events\";\n\nimport {\n  type FastifyBaseLogger,\n  type FastifyPluginCallback,\n  type FastifyPluginOptions,\n  type FastifyTypeProvider,\n  type RawServerDefault,\n} from \"fastify\";\n\nimport { type JsonSchemaToTsProvider } from \"@fastify/type-provider-json-schema-to-ts\";\nimport FastifySSEPlugin from \"fastify-sse-v2\";\n\nconst eventEmitter: EventEmitter = new EventEmitter();\n\ntype TOptions = FastifyPluginOptions & {\n  schema?: Record<string, any>;\n  preHandler?: any;\n  didRegisterToChannel?: (channel: string) => void;\n  canRegisterToChannel?: (channel: string) => Promise<boolean> | boolean;\n};\n\n// https://seg.phault.net/blog/2018/03/async-iterators-cancellation/\nconst fastifyPlugin: FastifyPluginCallback<\n  TOptions,\n  RawServerDefault,\n  FastifyTypeProvider,\n  FastifyBaseLogger\n> = (fastifyInstance, opts, done) => {\n  const server = fastifyInstance.withTypeProvider<JsonSchemaToTsProvider>();\n\n  // This might be a problem if imported multiple times?\n\n  server.register(FastifySSEPlugin);\n\n  server.get(\"/:channel\", {\n    schema: {\n      ...(opts.schema ?? {}),\n      params: {\n        type: \"object\",\n        properties: {\n          channel: {\n            type: \"string\",\n          },\n        },\n        required: [\"channel\"],\n      },\n      headers: {\n        type: \"object\",\n        properties: {\n          \"last-event-id\": {\n            type: \"integer\",\n          },\n        },\n      },\n      // response: {\n      //   200: {},\n      // },\n    } as const,\n\n    preHandler: opts.preHandler ?? [],\n\n    async handler(request, reply) {\n      const channel = request.params.channel;\n      const lastEventId: number | undefined = request.headers[\"last-event-id\"];\n      const didRegisterToChannel = opts?.didRegisterToChannel ?? (() => null);\n      const canRegisterToChannel = opts?.canRegisterToChannel ?? (() => true);\n\n      if (await canRegisterToChannel(channel)) {\n        const missedMessages = messageHistory.messageHistoryForChannel(\n          channel,\n          lastEventId,\n        );\n\n        const abortController = new AbortController();\n\n        // https://github.com/NodeFactoryIo/fastify-sse-v2\n        //\n        // This doesn't get called when running Vue in dev mode.  Production is\n        // fine.\n        request.socket.on(\"close\", () => {\n          console.log(\"*************\");\n          console.log(\"SSE Request Closed\");\n          console.log(\"*************\");\n\n          abortController.abort();\n        });\n\n        /**\n         * This needs to be called after the response is made.  Placing it after\n         * reply.sse(), however, makes it inaccessible.\n         *\n         * We use a `setTimeout` to get around that.\n         */\n\n        setTimeout(() => didRegisterToChannel(channel));\n\n        reply.sse(\n          (async function* () {\n            // yield all missed messages based on lastEventId\n            for (const missedMessage of missedMessages) {\n              yield missedMessage;\n            }\n\n            // nodejs.org/api/events.html#eventsonemitter-eventname-options\n\n            try {\n              for await (\n                const events of on(eventEmitter, channel, {\n                  signal: abortController.signal,\n                })\n              ) {\n                for (let event of events) {\n                  yield event;\n                }\n              }\n            } catch {\n              // console.log(\"boooooo\");\n            }\n          })(),\n        );\n      } else {\n        return reply.code(400).send({ error: \"Bad Request\" });\n      }\n    },\n  });\n\n  done();\n};\n\ntype TMessage = {\n  event: string;\n  data: string;\n  id: number;\n};\n\ntype TMessageHistoryItem = {\n  channelName: string;\n  id: number;\n  message: TMessage;\n};\n\nclass MessageHistory {\n  constructor(\n    private messageHistory: Array<TMessageHistoryItem> = [],\n    private lastId: number = 0,\n  ) {}\n\n  messageHistoryForChannel(\n    channelName: string,\n    lastEventId: number | undefined,\n  ) {\n    return lastEventId !== undefined\n      ? this.messageHistory\n        .filter((item) => item.channelName === channelName)\n        .filter((item) => item.id > lastEventId)\n        .map((item) => item.message)\n      : [];\n  }\n\n  push(channelName: string, message: TMessage) {\n    this.messageHistory.push({ channelName, id: message.id, message });\n\n    // keep last 1000 messages.. make configurable\n    this.messageHistory = this.messageHistory.slice(-1000);\n  }\n\n  nextId() {\n    this.lastId += 1;\n    return this.lastId;\n  }\n}\n\nconst messageHistory = new MessageHistory();\n\n// order matters here\nconst sendSSEMessage = <T = unknown>(\n  channelName: string,\n  eventName: string,\n  data: T = null as T,\n) => {\n  // create a message\n  const message: TMessage = {\n    event: eventName,\n    data: JSON.stringify(data),\n    id: messageHistory.nextId(),\n  };\n\n  // push it onto the history stack\n  messageHistory.push(channelName, message);\n\n  // fire it off\n  eventEmitter.emit(channelName, message);\n  return message;\n};\n\n// console.log(\"HELLO WoRLD\");\n// export default fastifyPlugin;\nexport { fastifyPlugin, sendSSEMessage };\n"],"names":["eventEmitter","EventEmitter","fastifyPlugin","fastifyInstance","opts","done","_opts$schema","_opts$preHandler","server","withTypeProvider","register","FastifySSEPlugin","get","schema","_extends","params","type","properties","channel","required","headers","preHandler","handler","request","reply","_opts$didRegisterToCh","_opts$canRegisterToCh","lastEventId","didRegisterToChannel","canRegisterToChannel","missedMessages","messageHistory","messageHistoryForChannel","abortController","AbortController","socket","on","console","log","abort","setTimeout","sse","_wrapAsyncGenerator","missedMessage","_iteratorAbruptCompletion","_didIteratorError","_iteratorError","_iterator","_asyncIterator","signal","_step","_awaitAsyncGenerator","next","events","value","event","err","return","_unused","code","send","error","MessageHistory","constructor","lastId","channelName","undefined","filter","item","id","map","message","push","slice","nextId","sendSSEMessage","eventName","data","JSON","stringify","emit"],"mappings":"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"}